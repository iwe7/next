{"version":3,"sources":["strategies/jwt.strategy.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,2CAA2C;AAC3C,qCAAqC;AACrC,+CAAoD;AACpD,0CAA0C;AAG1C,IAAa,WAAW,GAAxB,iBAAyB,SAAQ,uBAAQ;IACrC,YAA6B,OAAoB;QAC7C,KAAK,CACD;YACI,cAAc,EAAE,yBAAU,CAAC,2BAA2B,EAAE;YACxD,iBAAiB,EAAE,IAAI;YACvB,WAAW,EAAE,QAAQ;SACxB,EACD,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,CAChE,CAAC;QARuB,YAAO,GAAP,OAAO,CAAa;QAS7C,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI;QAClC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,EAAE;YACV,OAAO,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;SACtC;QACD,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IAC7B,CAAC;CACJ,CAAA;AApBY,WAAW;IADvB,kBAAS,EAAE;qCAE8B,sBAAW;GADxC,WAAW,CAoBvB;AApBY,kCAAW","file":"jwt.strategy.js","sourcesContent":["import { Component } from \"@nestjs/common\";\nimport * as passport from \"passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { AuthService } from \"../services\";\n\n@Component()\nexport class JwtStrategy extends Strategy {\n    constructor(private readonly service: AuthService) {\n        super(\n            {\n                jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n                passReqToCallback: true,\n                secretOrKey: \"secret\",\n            },\n            async (req, payload, next) => this.verify(req, payload, next),\n        );\n        passport.use(this);\n    }\n\n    public async verify(req, payload, done) {\n        const isValid = await this.service.validateUser(payload);\n        if (!isValid) {\n            return done(\"Unauthorized\", false);\n        }\n        done(undefined, payload);\n    }\n}\n"]}