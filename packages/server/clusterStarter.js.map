{"version":3,"sources":["clusterStarter.ts"],"names":[],"mappings":";;AAAA,iDAAqC;AACrC,+BAA4B;AAE5B;IAAA;QACc,cAAS,GAAG,WAAI,CACtB,OAAO,CAAC,GAAG,EAAE,EACb,cAAc,EACd,SAAS,EACT,QAAQ,EACR,cAAc,CACjB,CAAC;IAkBN,CAAC;IAdU,UAAU;QACb,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAEM,KAAK;QACR,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,MAAM,KAAK,GAAG,oBAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACnC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IACpD,CAAC;IAES,OAAO,CAAC,OAAO;QACrB,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IAChE,CAAC;CACJ;AAzBD,0BAyBC","file":"clusterStarter.js","sourcesContent":["import { fork } from \"child_process\";\nimport { join } from \"path\";\n\nexport class Cluster {\n    protected bootstrap = join(\n        process.cwd(),\n        \"node_modules\",\n        \"@notadd\",\n        \"server\",\n        \"bootstrap.js\",\n    );\n\n    protected pid: number;\n\n    public initialize() {\n        process.on(\"message\", this.message);\n    }\n\n    public start() {\n        this.initialize();\n        const child = fork(this.bootstrap);\n        this.pid = child.pid;\n        console.log(\"Start server on pid: \" + this.pid);\n    }\n\n    protected message(message) {\n        console.log(\"Received Message: \" + JSON.stringify(message));\n    }\n}\n"]}